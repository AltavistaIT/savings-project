/* tslint:disable */
/* eslint-disable */
/**
 * sp_internal_api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrencyEntity } from './CurrencyEntity';
import {
    CurrencyEntityFromJSON,
    CurrencyEntityFromJSONTyped,
    CurrencyEntityToJSON,
    CurrencyEntityToJSONTyped,
} from './CurrencyEntity';
import type { TransactionTypeEntity } from './TransactionTypeEntity';
import {
    TransactionTypeEntityFromJSON,
    TransactionTypeEntityFromJSONTyped,
    TransactionTypeEntityToJSON,
    TransactionTypeEntityToJSONTyped,
} from './TransactionTypeEntity';

/**
 * 
 * @export
 * @interface ConfigAggregate
 */
export interface ConfigAggregate {
    /**
     * 
     * @type {Array<CurrencyEntity>}
     * @memberof ConfigAggregate
     */
    currencies?: Array<CurrencyEntity>;
    /**
     * 
     * @type {Array<TransactionTypeEntity>}
     * @memberof ConfigAggregate
     */
    transaction_types?: Array<TransactionTypeEntity>;
}

/**
 * Check if a given object implements the ConfigAggregate interface.
 */
export function instanceOfConfigAggregate(value: object): value is ConfigAggregate {
    return true;
}

export function ConfigAggregateFromJSON(json: any): ConfigAggregate {
    return ConfigAggregateFromJSONTyped(json, false);
}

export function ConfigAggregateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigAggregate {
    if (json == null) {
        return json;
    }
    return {
        
        'currencies': json['currencies'] == null ? undefined : ((json['currencies'] as Array<any>).map(CurrencyEntityFromJSON)),
        'transaction_types': json['transaction_types'] == null ? undefined : ((json['transaction_types'] as Array<any>).map(TransactionTypeEntityFromJSON)),
    };
}

export function ConfigAggregateToJSON(json: any): ConfigAggregate {
    return ConfigAggregateToJSONTyped(json, false);
}

export function ConfigAggregateToJSONTyped(value?: ConfigAggregate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currencies': value['currencies'] == null ? undefined : ((value['currencies'] as Array<any>).map(CurrencyEntityToJSON)),
        'transaction_types': value['transaction_types'] == null ? undefined : ((value['transaction_types'] as Array<any>).map(TransactionTypeEntityToJSON)),
    };
}

