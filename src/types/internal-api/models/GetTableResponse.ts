/* tslint:disable */
/* eslint-disable */
/**
 * sp_internal_api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionEntity } from './TransactionEntity';
import {
    TransactionEntityFromJSON,
    TransactionEntityFromJSONTyped,
    TransactionEntityToJSON,
    TransactionEntityToJSONTyped,
} from './TransactionEntity';
import type { TableEntity } from './TableEntity';
import {
    TableEntityFromJSON,
    TableEntityFromJSONTyped,
    TableEntityToJSON,
    TableEntityToJSONTyped,
} from './TableEntity';

/**
 * 
 * @export
 * @interface GetTableResponse
 */
export interface GetTableResponse {
    /**
     * 
     * @type {TableEntity}
     * @memberof GetTableResponse
     */
    table?: TableEntity;
    /**
     * 
     * @type {Array<TransactionEntity>}
     * @memberof GetTableResponse
     */
    transactions?: Array<TransactionEntity>;
}

/**
 * Check if a given object implements the GetTableResponse interface.
 */
export function instanceOfGetTableResponse(value: object): value is GetTableResponse {
    return true;
}

export function GetTableResponseFromJSON(json: any): GetTableResponse {
    return GetTableResponseFromJSONTyped(json, false);
}

export function GetTableResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTableResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'table': json['table'] == null ? undefined : TableEntityFromJSON(json['table']),
        'transactions': json['transactions'] == null ? undefined : ((json['transactions'] as Array<any>).map(TransactionEntityFromJSON)),
    };
}

export function GetTableResponseToJSON(json: any): GetTableResponse {
    return GetTableResponseToJSONTyped(json, false);
}

export function GetTableResponseToJSONTyped(value?: GetTableResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'table': TableEntityToJSON(value['table']),
        'transactions': value['transactions'] == null ? undefined : ((value['transactions'] as Array<any>).map(TransactionEntityToJSON)),
    };
}

