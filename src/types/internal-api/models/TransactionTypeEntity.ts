/* tslint:disable */
/* eslint-disable */
/**
 * sp_internal_api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionTypeEntity
 */
export interface TransactionTypeEntity {
    /**
     * 
     * @type {number}
     * @memberof TransactionTypeEntity
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionTypeEntity
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionTypeEntity
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TransactionTypeEntity
     */
    status?: boolean;
    /**
     * 
     * @type {number}
     * @memberof TransactionTypeEntity
     */
    table_type_id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionTypeEntity
     */
    created_at?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionTypeEntity
     */
    updated_at?: string;
}

/**
 * Check if a given object implements the TransactionTypeEntity interface.
 */
export function instanceOfTransactionTypeEntity(value: object): value is TransactionTypeEntity {
    return true;
}

export function TransactionTypeEntityFromJSON(json: any): TransactionTypeEntity {
    return TransactionTypeEntityFromJSONTyped(json, false);
}

export function TransactionTypeEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionTypeEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : json['status'],
        'table_type_id': json['table_type_id'] == null ? undefined : json['table_type_id'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'updated_at': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function TransactionTypeEntityToJSON(json: any): TransactionTypeEntity {
    return TransactionTypeEntityToJSONTyped(json, false);
}

export function TransactionTypeEntityToJSONTyped(value?: TransactionTypeEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'key': value['key'],
        'description': value['description'],
        'status': value['status'],
        'table_type_id': value['table_type_id'],
        'created_at': value['created_at'],
        'updated_at': value['updated_at'],
    };
}

